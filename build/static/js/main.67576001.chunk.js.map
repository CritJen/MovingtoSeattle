{"version":3,"sources":["stylesheets/page.module.css","stylesheets/filters.module.css","stylesheets/app.module.css","stylesheets/suggestions.module.css","views/Marker.jsx","reducers/suggestionsReducer.js","utils/MapContainerUtils.js","containers/MapContainer.jsx","views/Page.jsx","views/Filters.jsx","reducers/categoriesReducer.js","utils/findLocations.js","containers/FiltersContainer.jsx","reducers/locationsReducer.js","reducers/propertiesReducer.js","createStore.js","views/HomeCard.jsx","containers/SuggestedHomes.jsx","App.js","serviceWorker.js","index.js","stylesheets/homeCard.module.css"],"names":["module","exports","map","filterColumn","app","suggestionsColumn","Marker","props","react_default","a","createElement","Fragment","hovered","icon","type","theme","style","fontSize","color","onMouseEnter","toggleHovered","id","twoToneColor","onMouseLeave","addSuggestions","createAction","suggestionsReducer","createReducer","_createReducer","Object","defineProperty","state","action","payload","suggestion","objectSpread","getHeatMapData","locations","selectedCategories","positions","location","lat","Math","round","latitude","lng","longitude","weight","find","cat","category_id","options","radius","opacity","connect","_ref2","categories","suggestions","filter","category","selected","some","selectedCategory","toggleHoveredAction","_ref","heatMapData","height","width","lib_default","bootstrapURLKeys","key","defaultZoom","yesIWantToUseGoogleMapApiInternals","mapStyles","heatmapLibrary","heatmap","defaultCenter","rental","views_Marker","show","place","text","Page","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleResults","setState","showingResults","_this$props","mapContainer","topForm","padding","className","styles","React","Component","defaultProps","Filters","onToggleCategory","onWeightChange","name","slider","defaultValue","disabled","onChange","es_switch","size","checked","addCategory","toggleCategory","removeCategory","changeWeight","categoriesReducer","categoriesReducer_createReducer","toConsumableArray","todo","i","index","newWeight","value","Number","prototype","toRad","PI","FiltersContainer","properties","borderBottom","textAlign","paddingBottom","categoryId","ev","es_button","onClick","property","nearbyLocations","lat2","lon2","lat1","lon1","dLat","dLon","sin","cos","atan2","sqrt","sort","b","length","slice","findDistance","toggleCategoryAction","changeWeightAction","addSuggestionsAction","addLocations","locationsReducer","addProperty","propertiesReducer","store","configureStore","reducer","address","monthly_rent","undefined","bedroom","bathroom","HomeCard","neighborhood","link_id","cleanAddress","replace","link","concat","card","window","open","SuggestedHomes","suggestedRentals","assign","dispatch","fetch","then","resp","json","data","App","es","Page_Page","containers_MapContainer","containers_FiltersContainer","containers_SuggestedHomes","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67576001.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"page_map__3tT5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterColumn\":\"filters_filterColumn__3Fse5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__1nTPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"suggestionsColumn\":\"suggestions_suggestionsColumn__gW1Fj\"};","import React from \"react\";\nimport { Icon } from \"antd\";\n\nconst Marker = props => {\n  return (\n    <>\n      {!props.hovered && (\n        <Icon\n          type=\"home\"\n          theme=\"filled\"\n          style={{ fontSize: \"14px\", color: \"#4B0082\" }}\n          onMouseEnter={() => props.toggleHovered(props.id)}\n        />\n      )}\n      {props.hovered && (\n        <Icon\n          type=\"star\"\n          theme=\"twoTone\"\n          twoToneColor=\"#FF00FF\"\n          style={{ fontSize: \"18px\" }}\n          onMouseLeave={() => props.toggleHovered(props.id)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Marker;\n","import { createReducer, createAction } from \"redux-starter-kit\";\n\nconst initialState = [];\n\nexport const addSuggestions = createAction(\"addSuggestions\");\nexport const toggleHovered = createAction(\"toggleHovered\");\n\nconst suggestionsReducer = createReducer(initialState, {\n  [addSuggestions]: (state, action) => {\n    return action.payload.map(suggestion => ({\n      ...suggestion,\n      hovered: false\n    }));\n  },\n  [toggleHovered]: (state, action) => {\n    return state.map(suggestion => {\n      if (suggestion.id === action.payload) {\n        return { ...suggestion, hovered: !suggestion.hovered };\n      } else {\n        return suggestion;\n      }\n    });\n  }\n});\n\nexport default suggestionsReducer;\n","export const getHeatMapData = (locations, selectedCategories) => ({\n  positions: locations\n    // .filter((location, index) => index > 200 && index < 250)\n    .map(location => ({\n      lat: Math.round(location.latitude * 10000) / 10000,\n      lng: Math.round(location.longitude * 10000) / 10000,\n      weight: selectedCategories.find(cat => cat.id === location.category_id)\n        .weight\n    })),\n  options: {\n    radius: 12,\n    opacity: 1\n  }\n});\n","import React from \"react\";\n// import { GoogleApiWrapper, Map } from \"google-maps-react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport GoogleMapReact from \"google-map-react\";\nimport Marker from \"../views/Marker\";\nimport { toggleHovered as toggleHoveredAction } from \"../reducers/suggestionsReducer\";\nimport { getHeatMapData } from \"../utils/MapContainerUtils\";\n\nconst propTypes = {\n  selectedCategories: PropTypes.array.isRequired,\n  locations: PropTypes.array.isRequired,\n  suggestions: PropTypes.array.isRequired\n};\n\nexport function MapContainer({\n  selectedCategories,\n  locations,\n  suggestions,\n  toggleHovered\n}) {\n  const mapStyles = {\n    width: \"80vh\",\n    height: \"80%\"\n  };\n  const heatMapData = getHeatMapData(locations, selectedCategories);\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyC5GtsnQTnxNEJuwDpjgb9laNU8Ta35RLw\" }}\n        defaultZoom={14}\n        yesIWantToUseGoogleMapApiInternals\n        style={{ mapStyles }}\n        heatmapLibrary={true}\n        heatmap={heatMapData}\n        defaultCenter={{\n          lat: 47.6062,\n          lng: -122.3321\n        }}\n      >\n        {suggestions.map(rental => {\n          return (\n            <Marker\n              key={rental.id}\n              id={rental.id}\n              lat={rental.latitude}\n              lng={rental.longitude}\n              show={true}\n              place={\"hello\"}\n              text={\"Hi!\"}\n              hovered={rental.hovered}\n              toggleHovered={toggleHovered}\n            />\n          );\n        })}\n      </GoogleMapReact>\n    </div>\n  );\n}\nMapContainer.propTypes = propTypes;\n//Destructuring the state and passing it into the function so that we can return it as props\nfunction mapStateToProps({ categories, locations, suggestions }) {\n  const selectedCategories = categories.filter(category => category.selected);\n  return {\n    selectedCategories,\n    suggestions,\n    locations: locations.filter(location =>\n      selectedCategories.some(\n        selectedCategory => selectedCategory.id === location.category_id\n      )\n    )\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { toggleHovered: toggleHoveredAction }\n)(MapContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../stylesheets/page.module.css\";\n\nconst propTypes = {\n  mapContainer: PropTypes.node.isRequired,\n  topForm: PropTypes.node.isRequired,\n  suggestions: PropTypes.node.isRequired\n};\n\nconst defaultProps = {};\n\nexport default class Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestions: []\n    };\n  }\n\n  toggleResults = () => {\n    this.setState({ showingResults: !this.state.showingResults });\n  };\n\n  render() {\n    const { mapContainer, topForm, suggestions } = this.props;\n    return (\n      <React.Fragment>\n        <div style={{ padding: 5 }}>{topForm}</div>\n        <div className={styles.map}>{mapContainer}</div>\n        <div>{suggestions}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nPage.propTypes = propTypes;\nPage.defaultProps = defaultProps;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Slider, Switch } from \"antd\";\nimport styles from \"../stylesheets/filters.module.css\";\n\nconst propTypes = {\n  onToggleCategory: PropTypes.func.isRequired,\n  categories: PropTypes.array.isRequired,\n  onWeightChange: PropTypes.func.isRequired\n};\n\nconst defaultProps = { categories: [] };\n\nexport default function Filters({\n  onToggleCategory,\n  categories,\n  onWeightChange\n}) {\n  return categories.map(category => {\n    const { selected, name, id } = category;\n    return (\n      <div className={styles.filterColumn} key={id}>\n        {name}\n        <Slider\n          defaultValue={30}\n          disabled={!selected}\n          onChange={onWeightChange(category.id)}\n        />\n        <Switch\n          size=\"small\"\n          checked={selected}\n          onChange={onToggleCategory(category.id)}\n        />\n      </div>\n    );\n  });\n}\n\nFilters.propTypes = propTypes;\nFilters.defaultProps = defaultProps;\n","import { createReducer, createAction } from \"redux-starter-kit\";\n\n//Defining initial state\nconst initialState = [];\n\nconst categoriesUrl =\n  \"http://ec2-18-217-182-61.us-east-2.compute.amazonaws.com:3000/categories\";\n\n//Fetches the data from our backend api, passes it into the addLocations action creator, and then dispatches the result\nexport const getCategories = () => dispatch => {\n  fetch(categoriesUrl)\n    .then(resp => resp.json())\n    .then(data => dispatch(addCategory(data)));\n};\n\n//Creating action creator functions and assigning them to variables\nexport const addCategory = createAction(\"addCategory\");\nexport const toggleCategory = createAction(\"toggleCategory\");\nexport const removeCategory = createAction(\"removeCategory\");\nexport const changeWeight = createAction(\"changeWeight\");\n\n//Creating the reducer to handle different action types. Finding the action type through toString on the variables\nconst categoriesReducer = createReducer(initialState, {\n  [addCategory]: (state, action) => {\n    // \"mutate\" the array by calling push()\n    return [...action.payload];\n  },\n  [toggleCategory]: (state, action) => {\n    const category = state.find(cat => cat.id === action.payload);\n    // \"mutate\" the object by overwriting a field\n    category.selected = !category.selected;\n  },\n  [removeCategory]: (state, action) => {\n    // Can still return an immutably-updated value if we want to\n    return state.filter((todo, i) => i !== action.payload.index);\n  },\n  [changeWeight]: (state, action) => {\n    let newWeight = action.payload.value / 100;\n    const category = state.find(cat => cat.id === action.payload.category);\n    category.weight = newWeight;\n  }\n});\n\n//Selector to find selected categories\nexport function getSelectedCategories(categories) {\n  return categories.filter(category => category.selected);\n}\n\nexport default categoriesReducer;\n","// eslint-disable-next-line\nNumber.prototype.toRad = function() {\n  return (this * Math.PI) / 180;\n};\n\nexport function findDistance(locations, properties) {\n  const propertiesWithLocations = properties.map(property => {\n    return {\n      ...property,\n      nearbyLocations: locations.filter(location => {\n        //Uses the Haversine Formula to calculate the locations within a defined radius of a property\n        var lat2 = location.latitude;\n        var lon2 = location.longitude;\n        var lat1 = property.latitude;\n        var lon1 = property.longitude;\n\n        var R = 6371; // km\n        //has a problem with the .toRad() method below.\n        var x1 = lat2 - lat1;\n        var dLat = x1.toRad();\n        var x2 = lon2 - lon1;\n        var dLon = x2.toRad();\n        var a =\n          Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n          Math.cos(lat1.toRad()) *\n            Math.cos(lat2.toRad()) *\n            Math.sin(dLon / 2) *\n            Math.sin(dLon / 2);\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        var d = R * c;\n\n        return d < 2;\n      })\n    };\n  });\n  //Sorts the array of properties based on the number of locations within the designated radius\n  const sortedProperties = propertiesWithLocations.sort((a, b) =>\n    a.nearbyLocations.length > b.nearbyLocations.length\n      ? -1\n      : b.nearbyLocations.length > a.nearbyLocations.length\n      ? 1\n      : 0\n  );\n  return sortedProperties.slice(0, 10);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Filters from \"../views/Filters\";\nimport {\n  toggleCategory as toggleCategoryAction,\n  changeWeight as changeWeightAction\n} from \"../reducers/categoriesReducer\";\nimport { addSuggestions as addSuggestionsAction } from \"../reducers/suggestionsReducer\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"antd\";\nimport { findDistance } from \"../utils/findLocations\";\n\nconst propTypes = {\n  categories: PropTypes.array.isRequired,\n  toggleCategory: PropTypes.func.isRequired\n};\n\nconst defaultProps = {};\n\nfunction FiltersContainer({\n  toggleCategory,\n  categories,\n  changeWeight,\n  locations,\n  properties,\n  addSuggestions\n}) {\n  const onToggleCategory = categoryId => ev => {\n    toggleCategory(categoryId);\n  };\n\n  const onSuggestionButtonClick = () => {\n    const suggestions = findDistance(locations, properties);\n    addSuggestions(suggestions);\n  };\n\n  const onWeightChange = category => value => {\n    changeWeight({ category, value });\n  };\n\n  return (\n    <>\n      <h3\n        style={{\n          borderBottom: \"1px double black\",\n          textAlign: \"center\",\n          paddingBottom: 5\n        }}\n      >\n        What would you like to live near?\n      </h3>\n      <p\n        style={{\n          borderBottom: \"1px dashed #333\",\n          textAlign: \"center\",\n          paddingBottom: 5\n        }}\n      >\n        Choose as many categories as you like!\n      </p>\n      <Filters\n        onToggleCategory={onToggleCategory}\n        categories={categories}\n        onWeightChange={onWeightChange}\n      />\n      <br />\n      <Button onClick={onSuggestionButtonClick}>Let's find some places!</Button>\n    </>\n  );\n}\n\nFiltersContainer.propTypes = propTypes;\nFiltersContainer.defaultProps = defaultProps;\n\n//Creating a categories prop with a value of an array of objects containing all possible categories\nfunction mapStateToProps({ categories, properties, locations }) {\n  const selectedCategories = categories.filter(category => category.selected);\n  return {\n    categories,\n    properties,\n    locations: locations.filter(location =>\n      selectedCategories.some(\n        selectedCategory => selectedCategory.id === location.category_id\n      )\n    )\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    toggleCategory: toggleCategoryAction,\n    changeWeight: changeWeightAction,\n    addSuggestions: addSuggestionsAction\n  }\n)(FiltersContainer);\n","import { createReducer, createAction } from \"redux-starter-kit\";\n\n//Defining initial state\nconst initialState = [];\nconst locationsUrl =\n  \"http://ec2-18-217-182-61.us-east-2.compute.amazonaws.com:3000/locations\";\n\n//Fetches the data from our backend api, passes it into the addLocations action creator, and then dispatches the result\nexport const getLocations = () => dispatch => {\n  fetch(locationsUrl)\n    .then(resp => resp.json())\n    .then(data => dispatch(addLocations(data)));\n};\n\n//Creating action creator functions and assigning them to variables\nexport const addLocations = createAction(\"addLocations\");\n\n//Creating the reducer to handle different action types. Finding the action type through toString on the variables\nconst locationsReducer = createReducer(initialState, {\n  [addLocations]: (state, action) => {\n    return [...action.payload];\n  }\n});\n\n//Selector to find selected locations\nexport function getSelectedLocations(locations) {\n  return locations.filter(category => category.selected);\n}\n\nexport default locationsReducer;\n","import { createReducer, createAction } from \"redux-starter-kit\";\n\n//Defining initial state\nconst initialState = [];\nconst propertiesUrl =\n  \"http://ec2-18-217-182-61.us-east-2.compute.amazonaws.com:3000/properties\";\n\n//Fetches the data from our backend api, passes it into the addLocations action creator, and then dispatches the result\nexport const getProperties = () => dispatch => {\n  fetch(propertiesUrl)\n    .then(resp => resp.json())\n    .then(data => dispatch(addProperty(data)));\n};\n\n//Creating action creator functions and assigning them to variables\nexport const addProperty = createAction(\"addProperty\");\n\n//Creating the reducer to handle different action types. Finding the action type through toString on the variables\nconst propertiesReducer = createReducer(initialState, {\n  [addProperty]: (state, action) => {\n    return [...action.payload];\n  }\n});\n\n//Selector to find selected locations\n\nexport default propertiesReducer;\n","import { configureStore } from \"redux-starter-kit\";\nimport categoriesReducer from \"./reducers/categoriesReducer\";\nimport locationsReducer from \"./reducers/locationsReducer\";\nimport propertiesReducer from \"./reducers/propertiesReducer\";\nimport suggestionsReducer from \"./reducers/suggestionsReducer\";\n\nconst store = configureStore({\n  reducer: {\n    locations: locationsReducer,\n    categories: categoriesReducer,\n    properties: propertiesReducer,\n    suggestions: suggestionsReducer\n  }\n});\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../stylesheets/homeCard.module.css\";\nimport { Icon } from \"antd\";\n\nconst propTypes = {\n  name: PropTypes.string,\n  address: PropTypes.string,\n  monthly_rent: PropTypes.number,\n  bedroom: PropTypes.string,\n  bathroom: PropTypes.string\n};\n\nconst defaultProps = {\n  name: \"\",\n  address: \"\",\n  monthly_rent: undefined,\n  bedroom: \"\",\n  bathroom: \"\"\n};\n\nexport default function HomeCard({\n  name,\n  address,\n  monthly_rent,\n  bedroom,\n  bathroom,\n  neighborhood,\n  link_id,\n  toggleHovered,\n  id,\n  hovered\n}) {\n  let cleanAddress = address.replace(/[|&;$%@\"<>()+,]/g, \"\");\n  let link = `https://www.seattlerentals.com/${neighborhood}/apartments/${link_id}`;\n\n  return (\n    <React.Fragment>\n      <div\n        className={`${styles.card} ${hovered ? styles.selected : \" \"}`}\n        onMouseEnter={() => toggleHovered(id)}\n        onMouseLeave={() => toggleHovered(id)}\n      >\n        <span>{name}</span>\n        <br />\n        <span>{cleanAddress}</span>\n        <br />\n        <span>\n          {bedroom} || {bathroom}\n        </span>\n        <br />\n        <Icon\n          type=\"eye\"\n          theme=\"twoTone\"\n          twoToneColor=\"#52c41a\"\n          onClick={() => window.open(link, \"_blank\")}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n\nHomeCard.propTypes = propTypes;\nHomeCard.defaultProps = defaultProps;\n","import React from \"react\";\nimport styles from \"../stylesheets/suggestions.module.css\";\nimport { connect } from \"react-redux\";\nimport HomeCard from \"../views/HomeCard\";\nimport { toggleHovered as toggleHoveredAction } from \"../reducers/suggestionsReducer\";\n\nclass SuggestedHomes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestedRentals: []\n    };\n  }\n\n  render() {\n    const { toggleHovered } = this.props;\n    return (\n      <React.Fragment>\n        <div className={styles.suggestionsColumn}>\n          {this.props.suggestions.map(rental => (\n            <HomeCard {...rental} toggleHovered={toggleHovered} />\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps({ suggestions }) {\n  return { suggestions };\n}\n\nexport default connect(\n  mapStateToProps,\n  { toggleHovered: toggleHoveredAction }\n)(SuggestedHomes);\n","import React from \"react\";\nimport \"./App.css\";\nimport MapContainer from \"./containers/MapContainer\";\nimport Page from \"./views/Page\";\nimport FiltersContainer from \"./containers/FiltersContainer\";\nimport store from \"./createStore\";\nimport { Provider } from \"react-redux\";\nimport { getLocations } from \"./reducers/locationsReducer\";\nimport styles from \"./stylesheets/app.module.css\";\nimport \"./stylesheets/app.css\";\nimport { getCategories } from \"./reducers/categoriesReducer\";\nimport { getProperties } from \"./reducers/propertiesReducer\";\nimport SuggestedHomes from \"./containers/SuggestedHomes\";\n\nstore.dispatch(getLocations());\nstore.dispatch(getCategories());\nstore.dispatch(getProperties());\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className={styles.app}>\n        <Page\n          mapContainer={<MapContainer />}\n          topForm={<FiltersContainer />}\n          suggestions={<SuggestedHomes />}\n        />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"homeCard_card__MM5En\",\"selected\":\"homeCard_selected__2fB4l\"};"],"sourceRoot":""}